<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>developpement on Carnet de découvertes</title><link>https://fljd.in/tags/developpement/</link><description>Recent content in developpement on Carnet de découvertes</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>Florent Jardin</managingEditor><lastBuildDate>Thu, 21 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://fljd.in/tags/developpement/index.xml" rel="self" type="application/rss+xml"/><item><title>Halte aux régressions</title><link>https://fljd.in/2022/04/21/halte-aux-regressions/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2022/04/21/halte-aux-regressions/</guid><description>&lt;p>Pour garantir la qualité du code d&amp;rsquo;un logiciel, rien de mieux que la validation
par les tests. Ces derniers peuvent être de différentes natures (fonctionnels,
intégration, unitaires, performance, etc.) et permettent de respecter une série
d&amp;rsquo;exigences que s&amp;rsquo;imposent les développeurs pour maintenir et faire évoluer ledit
logiciel dans la bonne direction.&lt;/p>
&lt;p>Dans cet article, je souhaite explorer le système de tests tel qu&amp;rsquo;il est (et
a été) implémenté dans PostgreSQL et comment le réemployer dans la rédaction d&amp;rsquo;une
extension communautaire. Si vous ne connaissiez pas l&amp;rsquo;outil &lt;code>pg_regress&lt;/code>, il
n&amp;rsquo;aura plus de secret pour vous !&lt;/p></description></item><item><title>Conversions implicites</title><link>https://fljd.in/2022/03/11/conversions-implicites/</link><pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2022/03/11/conversions-implicites/</guid><description>&lt;p>À l&amp;rsquo;image d&amp;rsquo;un langage de programmation classique, le SQL manipule des données
typées, comme les chaînes de caractères, les dates ou des entiers numériques.
Les opérations de transformations ou de comparaison diffèrent en fonction du
type de données ; il ne sera pas possible de comparer le caractère &lt;code>A&lt;/code> avec le
chiffre &lt;code>4&lt;/code> mais l&amp;rsquo;opérateur &lt;code>||&lt;/code> permettra la concaténation des deux éléments.&lt;/p>
&lt;p>Dans cet article, je souhaite partager quelques anecdotes et problématiques de
terrain concernant cette particularité logicielle et comprendre les effets de
bord pour mieux les appréhender. Je prendrais un exemple assez spécifique du type
&lt;code>oid&lt;/code> et d&amp;rsquo;un risque de transtypage pouvant perturber le stockage de &lt;em>Large
Objects&lt;/em> dans une table, voire leur destruction non désirée.&lt;/p></description></item><item><title>Parlons un peu des données externes</title><link>https://fljd.in/2021/07/16/parlons-un-peu-des-donnees-externes/</link><pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2021/07/16/parlons-un-peu-des-donnees-externes/</guid><description>&lt;p>Depuis plusieurs semaines, j&amp;rsquo;étudie les nouveautés de la &lt;a href="https://www.postgresql.org/docs/14/release-14.html" target="_blank" rel="noopener">prochaine version majeure&lt;/a>
de PostgreSQL avec un intérêt grandissant pour le connecteur &lt;a href="https://www.postgresql.org/docs/13/postgres-fdw.html" target="_blank" rel="noopener">postgres_fdw&lt;/a>.
Cette extension assez folle n&amp;rsquo;a pas son équivalent sur les autres systèmes de
bases de données du marché, et pour cause, PostgreSQL est l&amp;rsquo;un des rares à respecter
la norme SQL/MED, sous-partie du langage SQL tel que défini par le standard
&lt;a href="https://www.iso.org/standard/63476.html" target="_blank" rel="noopener">ISO/IEC 9075-9&lt;/a>.&lt;/p></description></item><item><title>Les intervalles de valeurs</title><link>https://fljd.in/2021/06/09/les-intervalles-de-valeurs/</link><pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2021/06/09/les-intervalles-de-valeurs/</guid><description>&lt;p>Ce mois-ci, je vous propose de réviser un peu le langage SQL en l&amp;rsquo;appliquant pour
des cas d&amp;rsquo;usage assez fréquents qui mettent en scène des types temporels, notamment
les intervalles de dates. Ce sera l&amp;rsquo;occasion également de revenir sur l&amp;rsquo;implémentation
très originale qu&amp;rsquo;en a fait PostgreSQL avec les types d&amp;rsquo;intervalle de valeurs, ou
&lt;em>&lt;a href="https://www.postgresql.org/docs/13/rangetypes.html" target="_blank" rel="noopener">range types&lt;/a>&lt;/em> dans la documentation.&lt;/p></description></item><item><title>Comprendre les requêtes préparées</title><link>https://fljd.in/2021/03/30/comprendre-les-requetes-preparees/</link><pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2021/03/30/comprendre-les-requetes-preparees/</guid><description>&lt;p>Les requêtes ou &lt;a href="https://en.wikipedia.org/wiki/Prepared_statement" target="_blank" rel="noopener">instructions préparées&lt;/a> sont un mécanisme proposé par la
plupart des moteurs de bases de données afin de réexécuter un ordre SQL semblable
au précédent. On parle d&amp;rsquo;un &lt;em>template&lt;/em> de requête qu&amp;rsquo;il est nécessaire de
préparer avant d&amp;rsquo;exécuter. Les principaux bénéfices que nous lui connaissons
méritent un article afin de mieux comprendre leur implémentation.&lt;/p></description></item></channel></rss>