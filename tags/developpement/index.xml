<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Developpement on Carnet de découvertes</title><link>https://fljd.in/tags/developpement/</link><description>Recent content in Developpement on Carnet de découvertes</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>Florent Jardin</managingEditor><lastBuildDate>Mon, 14 Oct 2024 10:30:00 +0200</lastBuildDate><atom:link href="https://fljd.in/tags/developpement/index.xml" rel="self" type="application/rss+xml"/><item><title>Poissons et coquillages</title><link>https://fljd.in/2024/10/14/poissons-et-coquillages/</link><pubDate>Mon, 14 Oct 2024 10:30:00 +0200</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2024/10/14/poissons-et-coquillages/</guid><description>&lt;p>En tant que pur produit académique des années 2010, mon langage de script de prédilection a
toujours été le Bash (&lt;em>Bourne Again Shell&lt;/em>). Non sans ignorer qu&amp;rsquo;il ait pu en exister d&amp;rsquo;autres, je
ne me suis jamais vraiment tourné vers d&amp;rsquo;autres shells pour automatiser les tâches du quotidien
dans mon métier de DBA.&lt;/p>
&lt;p>Et pour cause, j&amp;rsquo;ai administré des centaines de serveurs de distributions très variées et il
n&amp;rsquo;était pas bien vu d&amp;rsquo;installer des dépendances systèmes lourdes pour enrichir des scripts Python
ou Perl. Nous apprenions donc à écrire des scripts portables et universels, compatibles partout
où nous déposions nos valises.&lt;/p>
&lt;p>Me suis-je enfermé dans un dogme conservateur, en m&amp;rsquo;interdisant &lt;em>de facto&lt;/em> à me tourner vers des
shells modernes et bien plus aisés à appréhender ?&lt;/p></description></item><item><title>Les types hiérarchiques</title><link>https://fljd.in/2024/09/19/les-types-hierarchiques/</link><pubDate>Thu, 19 Sep 2024 13:20:00 +0200</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2024/09/19/les-types-hierarchiques/</guid><description>&lt;p>Bien que la norme SQL définisse un ensemble de règles pour que les systèmes de bases
de données puissent être interchangeables, il existe de petites singularités dans la
nature. À ce titre, le type de données &lt;code>hierarchyid&lt;/code> fourni par SQL Server est un
exemple flagrant. Si vous êtes amené à basculer vers PostgreSQL, deux solutions s&amp;rsquo;offrent
à vous.&lt;/p>
&lt;p>Une première et plus simple consiste à lier chaque nœud à son parent à l&amp;rsquo;aide d&amp;rsquo;une nouvelle
colonne &lt;code>parentid&lt;/code> et d&amp;rsquo;y appliquer une contrainte de clé étrangère. Une autre approche,
plus complète, consiste à utiliser l&amp;rsquo;extension &lt;code>ltree&lt;/code>. Cet article traite de ce dernier
cas.&lt;/p></description></item><item><title>Un assistant pour copier les données distantes</title><link>https://fljd.in/2024/05/28/un-assistant-pour-copier-les-donnees-distantes/</link><pubDate>Tue, 28 May 2024 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2024/05/28/un-assistant-pour-copier-les-donnees-distantes/</guid><description>&lt;p>Lors de la dernière &lt;a href="https://blog.dalibo.com/2023/12/08/pgsession16_programme.html" target="_blank" rel="noopener">PGSession 16&lt;/a>, j&amp;rsquo;ai rédigé et animé un &lt;a href="https://dali.bo/wsfdw_html" target="_blank" rel="noopener">atelier&lt;/a> de
trois heures au sujet de la migration vers PostgreSQL à l&amp;rsquo;aide des Foreign Data
Wrappers, ou FDW. Ce fut notamment l&amp;rsquo;occasion de présenter au grand public,
l&amp;rsquo;extension &lt;a href="https://github.com/cybertec-postgresql/db_migrator" target="_blank" rel="noopener">&lt;code>db_migrator&lt;/code>&lt;/a> pour laquelle j&amp;rsquo;ai dédié un &lt;a href="https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/">article&lt;/a> sur ce
blog.&lt;/p>
&lt;p>Au cours de cet atelier, nous pouvons constater que la copie des données avec
l&amp;rsquo;extension &lt;code>db_migrator&lt;/code> n&amp;rsquo;est pas parfaitement prise en charge. En effet, bien
qu&amp;rsquo;il existe une fonction de bas niveau pour répartir sur plusieurs processus le
transfert table à table, de nombreuses situations devront exiger de rédiger un
grand nombre de requêtes SQL pour se tirer d&amp;rsquo;affaire. Au cours des mois qui
suivirent, je me suis attelé à la conception d&amp;rsquo;un &lt;a href="https://github.com/fljdin/fdw-assistant" target="_blank" rel="noopener">assistant&lt;/a> écrit en
PL/pgSQL dont le but est de simplifier la génération de ces requêtes.&lt;/p></description></item><item><title>En route vers la liberté avec db_migrator</title><link>https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/</link><pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/</guid><description>&lt;p>J&amp;rsquo;ai passé plusieurs semaines ces derniers mois à contribuer à l&amp;rsquo;extension
&lt;a href="https://github.com/cybertec-postgresql/db_migrator" target="_blank" rel="noopener">db_migrator&lt;/a>. Rédigée uniquement en PL/pgSQL, elle permet de migrer les schémas
et les données d&amp;rsquo;un système de bases de données vers PostgreSQL à l&amp;rsquo;aide des
données externes que j&amp;rsquo;avais déjà présentées il y a &lt;a href="https://fljd.in/2021/07/16/parlons-un-peu-des-donnees-externes/">quelques années&lt;/a>.&lt;/p>
&lt;p>Dans cet article, je présente le fonctionnement de l&amp;rsquo;outil, sa philosophie et la
raison d&amp;rsquo;être que je lui ai trouvée, alors même qu&amp;rsquo;il rejoint l&amp;rsquo;écosystème des
projets libres déjà bien installés dans le paysage de la migration. Que vaut-il
aux côtés d&amp;rsquo;&lt;a href="https://ora2pg.darold.net/" target="_blank" rel="noopener">Ora2Pg&lt;/a> ou de &lt;a href="https://pgloader.io/" target="_blank" rel="noopener">pgloader&lt;/a> ?&lt;/p></description></item><item><title>Les colonnes générées</title><link>https://fljd.in/2023/03/22/les-colonnes-generees/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2023/03/22/les-colonnes-generees/</guid><description>&lt;p>La norme ISO SQL/Foundation (&lt;a href="https://www.iso.org/standard/63556.html" target="_blank" rel="noopener">ISO/IEC 9075-2:2016&lt;/a>) fait partie du standard
SQL et définit les règles pour la définition des relations et la manipulation
des données. En adoptant cette norme, les moteurs de bases de données
garantissent une interopérabilité avec leurs concurrents et permettent aux
entreprises de bénéficier d&amp;rsquo;une plus grande flexibilité lorsqu&amp;rsquo;elles souhaitent
passer de l&amp;rsquo;un à l&amp;rsquo;autre sans (trop) réécrire leur modèle de données ou leurs
requêtes SQL.&lt;/p>
&lt;p>Dans sa publication SQL:2003, la norme a introduit le concept de &lt;strong>colonnes
générées&lt;/strong> comme nouvelle spécification technique. Parfois appelées &lt;em>colonnes
calculées&lt;/em> ou &lt;em>colonnes virtuelles&lt;/em>, leurs valeurs dérivent de celles des autres
colonnes de la table. &lt;a href="https://modern-sql.com/caniuse/generated-always-as" target="_blank" rel="noopener">Un des articles&lt;/a> de Markus Winand passe au crible les
différents systèmes du marché pour voir s&amp;rsquo;ils respectent ce standard.&lt;/p></description></item></channel></rss>