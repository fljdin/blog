<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Migration on Discovery notebook</title><link>https://fljd.in/en/tags/migration/</link><description>Recent content in Migration on Discovery notebook</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>Florent Jardin</managingEditor><lastBuildDate>Mon, 25 Nov 2024 09:00:00 +0100</lastBuildDate><atom:link href="https://fljd.in/en/tags/migration/index.xml" rel="self" type="application/rss+xml"/><item><title>Substituting a variable in a SQL script</title><link>https://fljd.in/en/2024/11/25/substituting-a-variable-in-a-sql-script/</link><pubDate>Mon, 25 Nov 2024 09:00:00 +0100</pubDate><author>Florent Jardin</author><guid>https://fljd.in/en/2024/11/25/substituting-a-variable-in-a-sql-script/</guid><description>&lt;p>In a world where we constantly seek to automate repetitive tasks, it is common
to write down a query in a script, make it more convenient, and eventually
integrate the whole thing into a project&amp;rsquo;s codebase. Tools like SQL*Plus and
psql can be powerful allies in this game, as relevant as Bash or Python
interpreters.&lt;/p>
&lt;p>In several projects I have been involved in, I have come across a large number
of those kinds of scripts. Some of them have the particularity of offering input
parameters, processed by SQL*Plus with the very comfortable mechanism named
variable substitution. In this article, I share some tips to convert them to an
equivalent syntax that PostgreSQL&amp;rsquo;s psql tool can parse and manage.&lt;/p></description></item><item><title>An assistant to copy data from a remote server</title><link>https://fljd.in/en/2024/05/28/an-assistant-to-copy-data-from-a-remote-server/</link><pubDate>Tue, 28 May 2024 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/en/2024/05/28/an-assistant-to-copy-data-from-a-remote-server/</guid><description>&lt;p>During the last PGSession organized by Dalibo, I wrote and led a &lt;a href="https://dali.bo/wsfdw_html" target="_blank" rel="noopener">workshop&lt;/a>
(french) on the migration to PostgreSQL using Foreign Data Wrappers, or FDW.
This was an opportunity to present to the general public the &lt;a href="https://github.com/cybertec-postgresql/db_migrator" target="_blank" rel="noopener">&lt;code>db_migrator&lt;/code>&lt;/a>
extension for which I wrote an &lt;a href="https://fljd.in/en/2023/07/28/on-the-road-to-freedom-with-db_migrator/">article&lt;/a> on this blog.&lt;/p>
&lt;p>While working on this workshop, we noticed that copying data with the
&lt;code>db_migrator&lt;/code> extension is not perfectly supported. Indeed, although there is a
low-level function to distribute the transfer table by table over several
processes, many situations will require writing a large number of SQL queries to
get out of trouble. Over the following months, I worked on the design of an
&lt;a href="https://github.com/fljdin/fdw-assistant" target="_blank" rel="noopener">assistant&lt;/a> written in PL/pgSQL whose purpose is to simplify the generation
of these queries.&lt;/p></description></item><item><title>Transfer modes in a migration</title><link>https://fljd.in/en/2023/11/11/transfer-modes-in-a-migration/</link><pubDate>Sat, 11 Nov 2023 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/en/2023/11/11/transfer-modes-in-a-migration/</guid><description>&lt;p>In computer science, a migration project involves changing one or more technical
components without impacting any application behaviors. In the realm of
databases (and the profession I practice), it will involve choosing a new system
(such as PostgreSQL) to replace another (such as Oracle or Microsoft SQL
Server).&lt;/p>
&lt;p>In a &lt;a href="https://fljd.in/2021/12/06/migrer-vers-postgresql/">previous article&lt;/a> (French), I described exhaustive steps to perform a
complete migration using Foreign Data Wrappers technology. However, the critical
data transfer step described there does not suit all situations. Let&amp;rsquo;s explore
together the alternatives that cover a large portion of the needs.&lt;/p></description></item></channel></rss>