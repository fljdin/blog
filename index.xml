<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Carnet de découvertes</title><link>https://fljd.in/</link><description>Recent content on Carnet de découvertes</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>Florent Jardin</managingEditor><lastBuildDate>Wed, 11 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://fljd.in/index.xml" rel="self" type="application/rss+xml"/><item><title>Les modes de transfert dans une migration</title><link>https://fljd.in/2023/10/11/les-modes-de-transfert-dans-une-migration/</link><pubDate>Wed, 11 Oct 2023 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2023/10/11/les-modes-de-transfert-dans-une-migration/</guid><description>&lt;p>En informatique, un projet de migration consiste à changer un ou plusieurs
composants techniques sans qu&amp;rsquo;aucun comportement des applications n&amp;rsquo;en soit
impacté. Dans le paysage des bases de données (et le métier que j&amp;rsquo;exerce), il
s&amp;rsquo;agira de choisir un nouveau système (comme PostgreSQL) en remplacement d&amp;rsquo;un
autre (comme Oracle ou Microsoft SQL Server).&lt;/p>
&lt;p>Dans un &lt;a href="https://fljd.in/2021/12/06/migrer-vers-postgresql/">précédent article&lt;/a>, je décrivais les étapes exhaustives pour
réaliser une migration complète à l&amp;rsquo;aide de la technologie des &lt;em>Foreign Data
Wrappers&lt;/em>, mais l&amp;rsquo;étape critique de transfert des données qui y était décrite ne
s&amp;rsquo;adapte pas à toutes les situations. Voyons ensemble les alternatives qui
permettent de couvrir une grande partie des besoins.&lt;/p></description></item><item><title>En route vers la liberté avec db_migrator</title><link>https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/</link><pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/</guid><description>&lt;p>J&amp;rsquo;ai passé plusieurs semaines ces derniers mois à contribuer à l&amp;rsquo;extension
&lt;a href="https://github.com/cybertec-postgresql/db_migrator" target="_blank" rel="noopener">db_migrator&lt;/a>. Rédigée uniquement en PL/pgSQL, elle permet de migrer les schémas
et les données d&amp;rsquo;un système de bases de données vers PostgreSQL à l&amp;rsquo;aide des
données externes que j&amp;rsquo;avais déjà présentées il y a &lt;a href="https://fljd.in/2021/07/16/parlons-un-peu-des-donnees-externes/">quelques années&lt;/a>.&lt;/p>
&lt;p>Dans cet article, je présente le fonctionnement de l&amp;rsquo;outil, sa philosophie et la
raison d&amp;rsquo;être que je lui ai trouvée, alors même qu&amp;rsquo;il rejoint l&amp;rsquo;écosystème des
projets libres déjà bien installés dans le paysage de la migration. Que vaut-il
aux côtés d&amp;rsquo;&lt;a href="https://ora2pg.darold.net/" target="_blank" rel="noopener">Ora2Pg&lt;/a> ou de &lt;a href="https://pgloader.io/" target="_blank" rel="noopener">pgloader&lt;/a> ?&lt;/p></description></item><item><title>Les colonnes générées</title><link>https://fljd.in/2023/03/22/les-colonnes-generees/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2023/03/22/les-colonnes-generees/</guid><description>&lt;p>La norme ISO SQL/Foundation (&lt;a href="https://www.iso.org/standard/63556.html" target="_blank" rel="noopener">ISO/IEC 9075-2:2016&lt;/a>) fait partie du standard
SQL et définit les règles pour la définition des relations et la manipulation
des données. En adoptant cette norme, les moteurs de bases de données
garantissent une interopérabilité avec leurs concurrents et permettent aux
entreprises de bénéficier d&amp;rsquo;une plus grande flexibilité lorsqu&amp;rsquo;elles souhaitent
passer de l&amp;rsquo;un à l&amp;rsquo;autre sans (trop) réécrire leur modèle de données ou leurs
requêtes SQL.&lt;/p>
&lt;p>Dans sa publication SQL:2003, la norme a introduit le concept de &lt;strong>colonnes
générées&lt;/strong> comme nouvelle spécification technique. Parfois appelées &lt;em>colonnes
calculées&lt;/em> ou &lt;em>colonnes virtuelles&lt;/em>, leurs valeurs dérivent de celles des autres
colonnes de la table. &lt;a href="https://modern-sql.com/caniuse/generated-always-as" target="_blank" rel="noopener">Un des articles&lt;/a> de Markus Winand passe au crible les
différents systèmes du marché pour voir s&amp;rsquo;ils respectent ce standard.&lt;/p></description></item><item><title>Le fenêtrage à la rescousse</title><link>https://fljd.in/2023/02/10/le-fenetrage-a-la-rescousse/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2023/02/10/le-fenetrage-a-la-rescousse/</guid><description>&lt;p>PostgreSQL propose un certain nombre de fonctions qui permettent de calculer des
valeurs agrégées ou relatives sur un ensemble de lignes qui se situent dans une
« fenêtre » autour de la ligne courante. En utilisant de telles fonctions,
n&amp;rsquo;importe qui peut créer des requêtes plus avancées et plus efficaces pour
l&amp;rsquo;analyse de leur base de données.&lt;/p>
&lt;p>Depuis plusieurs semaines, je contribue à un projet de conversion de modèles de
données vers PostgreSQL, appelé &lt;a href="https://github.com/cybertec-postgresql/db_migrator" target="_blank" rel="noopener">db_migrator&lt;/a>. À cette occasion, j&amp;rsquo;ai
(re)découvert la puissance de ces &lt;a href="https://www.postgresql.org/docs/current/functions-window.html" target="_blank" rel="noopener">fonctions de fenêtrage&lt;/a> avec le langage
SQL. Dans cet article, je reviens sur un &lt;a href="https://github.com/cybertec-postgresql/db_migrator/pull/11" target="_blank" rel="noopener">cas concret&lt;/a> de transformation des
bornes supérieures d&amp;rsquo;une table partitionnée en tableau de valeur.&lt;/p></description></item><item><title>Construire PostgreSQL avec Meson</title><link>https://fljd.in/2022/09/29/construire-postgresql-avec-meson/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2022/09/29/construire-postgresql-avec-meson/</guid><description>&lt;p>Alors que la version 15 de PostgreSQL se prépare à sortir dans les &lt;a href="https://www.postgresql.org/about/news/postgresql-15-rc-1-released-2516/" target="_blank" rel="noopener">prochains
jours&lt;/a>, le groupe de développement du projet communautaire ont intégré &lt;a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=e6927270cd18d535b77cbe79c55c6584351524be" target="_blank" rel="noopener">leurs
récents travaux&lt;/a> pour accélérer les tâches d&amp;rsquo;automatisation et de compilation
à l&amp;rsquo;aide du système de construction &lt;a href="https://mesonbuild.com/" target="_blank" rel="noopener">Meson&lt;/a>.&lt;/p>
&lt;p>Ce chantier n&amp;rsquo;est pas anodin et redessine les contours de l&amp;rsquo;écosystème du moteur
de bases de données open-source le plus avancé au monde. Depuis sa forme libre
publiée en 1998, PostgreSQL repose sur des solutions robustes et éprouvées, mais
de plus en plus complexes à maintenir pour les nouvelles générations de
contributeur·rices. En proposant de se tourner vers un logiciel comme Meson, ces
amoureux et amoureuses du libre se tournent résolument vers l&amp;rsquo;avenir.&lt;/p></description></item></channel></rss>