<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Developpement on Carnet de découvertes</title><link>https://fljd.in/tags/developpement/</link><description>Recent content in Developpement on Carnet de découvertes</description><generator>Hugo -- gohugo.io</generator><language>fr</language><managingEditor>Florent Jardin</managingEditor><lastBuildDate>Fri, 28 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://fljd.in/tags/developpement/index.xml" rel="self" type="application/rss+xml"/><item><title>En route vers la liberté avec db_migrator</title><link>https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/</link><pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2023/07/28/en-route-vers-la-liberte-avec-db_migrator/</guid><description>&lt;p>J&amp;rsquo;ai passé plusieurs semaines ces derniers mois à contribuer à l&amp;rsquo;extension
&lt;a href="https://github.com/cybertec-postgresql/db_migrator" target="_blank" rel="noopener">db_migrator&lt;/a>. Rédigée uniquement en PL/pgSQL, elle permet de migrer les schémas
et les données d&amp;rsquo;un système de bases de données vers PostgreSQL à l&amp;rsquo;aide des
données externes que j&amp;rsquo;avais déjà présentées il y a &lt;a href="https://fljd.in/2021/07/16/parlons-un-peu-des-donnees-externes/">quelques années&lt;/a>.&lt;/p>
&lt;p>Dans cet article, je présente le fonctionnement de l&amp;rsquo;outil, sa philosophie et la
raison d&amp;rsquo;être que je lui ai trouvée, alors même qu&amp;rsquo;il rejoint l&amp;rsquo;écosystème des
projets libres déjà bien installés dans le paysage de la migration. Que vaut-il
aux côtés d&amp;rsquo;&lt;a href="https://ora2pg.darold.net/" target="_blank" rel="noopener">Ora2Pg&lt;/a> ou de &lt;a href="https://pgloader.io/" target="_blank" rel="noopener">pgloader&lt;/a> ?&lt;/p></description></item><item><title>Les colonnes générées</title><link>https://fljd.in/2023/03/22/les-colonnes-generees/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2023/03/22/les-colonnes-generees/</guid><description>&lt;p>La norme ISO SQL/Foundation (&lt;a href="https://www.iso.org/standard/63556.html" target="_blank" rel="noopener">ISO/IEC 9075-2:2016&lt;/a>) fait partie du standard
SQL et définit les règles pour la définition des relations et la manipulation
des données. En adoptant cette norme, les moteurs de bases de données
garantissent une interopérabilité avec leurs concurrents et permettent aux
entreprises de bénéficier d&amp;rsquo;une plus grande flexibilité lorsqu&amp;rsquo;elles souhaitent
passer de l&amp;rsquo;un à l&amp;rsquo;autre sans (trop) réécrire leur modèle de données ou leurs
requêtes SQL.&lt;/p>
&lt;p>Dans sa publication SQL:2003, la norme a introduit le concept de &lt;strong>colonnes
générées&lt;/strong> comme nouvelle spécification technique. Parfois appelées &lt;em>colonnes
calculées&lt;/em> ou &lt;em>colonnes virtuelles&lt;/em>, leurs valeurs dérivent de celles des autres
colonnes de la table. &lt;a href="https://modern-sql.com/caniuse/generated-always-as" target="_blank" rel="noopener">Un des articles&lt;/a> de Markus Winand passe au crible les
différents systèmes du marché pour voir s&amp;rsquo;ils respectent ce standard.&lt;/p></description></item><item><title>Le fenêtrage à la rescousse</title><link>https://fljd.in/2023/02/10/le-fenetrage-a-la-rescousse/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2023/02/10/le-fenetrage-a-la-rescousse/</guid><description>&lt;p>PostgreSQL propose un certain nombre de fonctions qui permettent de calculer des
valeurs agrégées ou relatives sur un ensemble de lignes qui se situent dans une
« fenêtre » autour de la ligne courante. En utilisant de telles fonctions,
n&amp;rsquo;importe qui peut créer des requêtes plus avancées et plus efficaces pour
l&amp;rsquo;analyse de leur base de données.&lt;/p>
&lt;p>Depuis plusieurs semaines, je contribue à un projet de conversion de modèles de
données vers PostgreSQL, appelé &lt;a href="https://github.com/cybertec-postgresql/db_migrator" target="_blank" rel="noopener">db_migrator&lt;/a>. À cette occasion, j&amp;rsquo;ai
(re)découvert la puissance de ces &lt;a href="https://www.postgresql.org/docs/current/functions-window.html" target="_blank" rel="noopener">fonctions de fenêtrage&lt;/a> avec le langage
SQL. Dans cet article, je reviens sur un &lt;a href="https://github.com/cybertec-postgresql/db_migrator/pull/11" target="_blank" rel="noopener">cas concret&lt;/a> de transformation des
bornes supérieures d&amp;rsquo;une table partitionnée en tableau de valeur.&lt;/p></description></item><item><title>Dessine-moi un arbre (abstrait)</title><link>https://fljd.in/2022/06/29/dessine-moi-un-arbre-abstrait/</link><pubDate>Wed, 29 Jun 2022 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2022/06/29/dessine-moi-un-arbre-abstrait/</guid><description>&lt;blockquote>
&lt;p>L&amp;rsquo;étape d&amp;rsquo;analyse crée un arbre d&amp;rsquo;analyse qui n&amp;rsquo;utilise que les règles fixes
de la structure syntaxique de SQL. Il ne fait aucune recherche dans les
catalogues système. Il n&amp;rsquo;y a donc aucune possibilité de comprendre la sémantique
détaillée des opérations demandées.&lt;/p>
&lt;p>(Documentation : &lt;a href="https://docs.postgresql.fr/14/parser-stage.html#id-1.10.3.6.4" target="_blank" rel="noopener">Processus de transformation&lt;/a>)&lt;/p>
&lt;/blockquote>
&lt;p>Que se passe-t-il entre l&amp;rsquo;instant où une requête SQL est soumise par l&amp;rsquo;utilisateur
et l&amp;rsquo;envoi du résultat sous forme de lignes par le serveur PostgreSQL ? Cette
question passionnante (pour une poignée de personnes, ne nous le cachons pas) a
été étudiée par Stefan Simkovics durant &lt;a href="https://archive.org/details/Enhancement_of_the_ANSI_SQL_Implementation_of_PostgreSQL/" target="_blank" rel="noopener">sa thèse&lt;/a> pour l&amp;rsquo;université de
technologie de Vienne en 1998.&lt;/p>
&lt;p>Ces travaux ont notamment permis d&amp;rsquo;enrichir la &lt;a href="https://docs.postgresql.fr/14/overview.html" target="_blank" rel="noopener">documentation officielle&lt;/a> avec
le chapitre « Présentation des mécanismes internes de PostgreSQL », qui reprend
assez largement les observations de Simkovics de manière simplifiée pour en
faciliter l&amp;rsquo;accès au plus grand nombre.&lt;/p>
&lt;p>Dans cet article, je souhaite présenter de récentes découvertes sur l&amp;rsquo;une de ces
phases internes, l&amp;rsquo;étape d&amp;rsquo;analyse, qui permet de manipuler une requête SQL sous
une forme d&amp;rsquo;arbre et qui respecte un pattern de développement avancé nommé &lt;a href="https://fr.wikipedia.org/wiki/Arbre_de_la_syntaxe_abstraite" target="_blank" rel="noopener">AST&lt;/a>
(&lt;em>abstract syntax tree&lt;/em>).&lt;/p></description></item><item><title>Halte aux régressions</title><link>https://fljd.in/2022/04/21/halte-aux-regressions/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><author>Florent Jardin</author><guid>https://fljd.in/2022/04/21/halte-aux-regressions/</guid><description>&lt;p>Pour garantir la qualité du code d&amp;rsquo;un logiciel, rien de mieux que la validation
par les tests. Ces derniers peuvent être de différentes natures (fonctionnels,
intégration, unitaires, performance, etc.) et permettent de respecter une série
d&amp;rsquo;exigences que s&amp;rsquo;imposent les développeurs pour maintenir et faire évoluer ledit
logiciel dans la bonne direction.&lt;/p>
&lt;p>Dans cet article, je souhaite explorer le système de tests tel qu&amp;rsquo;il est (et
a été) implémenté dans PostgreSQL et comment le réemployer dans la rédaction d&amp;rsquo;une
extension communautaire. Si vous ne connaissiez pas l&amp;rsquo;outil &lt;code>pg_regress&lt;/code>, il
n&amp;rsquo;aura plus de secret pour vous !&lt;/p></description></item></channel></rss>